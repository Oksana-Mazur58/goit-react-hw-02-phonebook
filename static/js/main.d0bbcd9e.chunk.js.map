{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactList","showContacts","onDeleteContact","className","map","id","name","number","type","onClick","ContactForm","static","onSubmit","PropTypes","func","isRequired","state","handleChangeName","e","setState","currentTarget","value","handleChangeNumber","handleSubmit","preventDefault","console","log","props","reset","this","ContactFormStyle","Contacts__form","pattern","title","required","onChange","ContactForm__button","Component","Filter","onChangeFilter","FilterStyle","Filter__aria","Filter__input","App","contacts","filter","addContact","contact","shortid","generate","contactNames","renderContacts","contactList","contactName","newContact","includes","alert","changeFilter","getFilteredContacts","toLowerCase","deleteContact","contactId","prevState","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0bbcd9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__aria\":\"Filter_Filter__aria__3EFuJ\",\"Filter__input\":\"Filter_Filter__input__2blVA\"};","import React from 'react';\r\nimport './ContactList.css'\r\nimport PropTypes from 'prop-types';\r\nconst ContactList = ({ showContacts, onDeleteContact }) => {\r\n    return (\r\n        <ul className=\"\">\r\n            {showContacts().map(({ id, name, number }) => (\r\n                <li key={id} className=\"ContactList__item\"\r\n                >{name}: <span className=\"ContactList__number\">{number}</span>\r\n                    <button type='button' className=\"ContactList__button\"\r\n                        onClick={() => onDeleteContact(id)}>Delete</button>\r\n\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\nContactList.propTypes = {\r\n    showContacts: PropTypes.func.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactList","import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport ContactFormStyle from './ContactForm.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n    static = {\r\n        onSubmit: PropTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n\r\n\r\n    handleChangeName = e => {\r\n        this.setState({ name: e.currentTarget.value })\r\n    }\r\n    handleChangeNumber = e => {\r\n        this.setState({ number: e.currentTarget.value })\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        this.props.onSubmit(this.state.name, this.state.number)\r\n\r\n        this.reset()\r\n\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className={ContactFormStyle.Contacts__form} onSubmit={this.handleSubmit}>\r\n                <p>Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={this.handleChangeName}\r\n\r\n                />\r\n                <p>Number</p>\r\n\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={this.state.number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={this.handleChangeNumber}\r\n                />\r\n                <button type=\"submit\" className={ContactFormStyle.ContactForm__button}>Add contact</button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default ContactForm","import React from 'react';\r\nimport FilterStyle from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n    <label className={FilterStyle.Filter__aria}>\r\n        Find contacts by name\r\n        <input type='text' value={value} onChange={onChangeFilter}\r\n            className={FilterStyle.Filter__input}>\r\n        </input>\r\n    </label>\r\n)\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter\r\n\r\n","import React, { Component } from \"react\";\nimport shortid from 'shortid'\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter'\n\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n\n\n  }\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    }\n    const contactNames = this.state.contacts.map(contact => contact.name);\n    this.renderContacts(contactNames, contact.name, contact);\n\n  }\n  renderContacts = (contactList, contactName, newContact) => {\n    if (contactList.includes(contactName)) {\n      alert(`${contactName} is already in contacts`)\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, newContact],\n      }));\n    };\n  };\n\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value })\n  }\n\n  getFilteredContacts = () => {\n    return this.state.contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    })\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n\n    }))\n  }\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts\n    return (\n\n      <div>\n        <h1>PhoneBook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h1>Contacts </h1>\n        <Filter value={filter}\n          onChangeFilter={this.changeFilter} />\n        <ContactList\n          showContacts={this.getFilteredContacts}\n          onDeleteContact={this.deleteContact} />\n      </div>\n\n\n    )\n  }\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts__form\":\"ContactForm_Contacts__form__35eW9\",\"ContactForm__button\":\"ContactForm_ContactForm__button__3yi9w\"};"],"sourceRoot":""}